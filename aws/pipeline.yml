---
groups:
  - name: certify-aws
    jobs:
      - bats-centos
      - bats-ubuntu
      - end2end-us
      - test-upgrade
      - certify-centos
      - certify-ubuntu
      - recreate-infrastructure-us

shared:
  - &prepare-director
    task: prepare-director
    file: pipelines/aws/tasks/prepare-director.yml
    params: &prepare-director-params
      BOSH_CLIENT:        {{BOSH_CLIENT}}
      BOSH_CLIENT_SECRET: {{BOSH_CLIENT_SECRET}}
      AWS_ACCESS_KEY:     {{AWS_ACCESS_KEY}}
      AWS_SECRET_KEY:     {{AWS_SECRET_KEY}}
      AWS_REGION_NAME:    {{AWS_REGION_NAME}}
      PUBLIC_KEY_NAME:    {{PUBLIC_KEY_NAME}}
      PRIVATE_KEY_DATA:   {{PRIVATE_KEY_DATA}}
      SSLIP_IO_KEY:       {{sslip_io_key}}
      AWS_STACK_NAME:     ""

  - &deploy-director
    task: deploy-director
    file: pipelines/shared/tasks/deploy-director.yml
    params: &deploy-director-params
      BOSH_CLIENT: {{BOSH_CLIENT}}
      BOSH_CLIENT_SECRET: {{BOSH_CLIENT_SECRET}}

  - &prepare-manual-bats
    task: prepare-manual-bats
    file: pipelines/aws/tasks/prepare-manual-bats.yml
    params: &prepare-manual-bats-params
      AWS_ACCESS_KEY:     {{AWS_ACCESS_KEY}}
      AWS_SECRET_KEY:     {{AWS_SECRET_KEY}}
      AWS_REGION_NAME:    {{AWS_REGION_NAME}}
      BAT_VCAP_PASSWORD:  {{BAT_VCAP_PASSWORD}}
      PUBLIC_KEY_NAME:    {{PUBLIC_KEY_NAME}}
      BOSH_CLIENT:        {{BOSH_CLIENT}}
      BOSH_CLIENT_SECRET: {{BOSH_CLIENT_SECRET}}
      STEMCELL_NAME:      ""
      AWS_STACK_NAME:     ""

  - &run-bats
    task: run-bats
    file: pipelines/shared/tasks/run-bats.yml

  - &run-e2e
    task: run-e2e
    file: pipelines/aws/tasks/run-e2e.yml
    params: &run-e2e-params
      AWS_ACCESS_KEY:     {{AWS_ACCESS_KEY}}
      AWS_SECRET_KEY:     {{AWS_SECRET_KEY}}
      AWS_REGION_NAME:    {{AWS_REGION_NAME}}
      BOSH_CLIENT:        {{BOSH_CLIENT}}
      BOSH_CLIENT_SECRET: {{BOSH_CLIENT_SECRET}}
      AWS_STACK_NAME:     {{AWS_E2E_STACK_NAME}}
      STEMCELL_NAME:      ""

  - &teardown
    task: teardown
    file: pipelines/shared/tasks/teardown.yml
    params: &teardown-params
      BOSH_CLIENT:        {{BOSH_CLIENT}}
      BOSH_CLIENT_SECRET: {{BOSH_CLIENT_SECRET}}
      DEPLOYMENT_NAME:    certification

jobs:
  - name: end2end-us
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release,    trigger: true}
        - {get: cpi-release,     trigger: true}
        - {get: after-midnight,  trigger: true}
        - {get: centos-stemcell, trigger: false} # pass-thru to certification jobs
        - {get: pipelines,       trigger: false}
        - {get: bosh-cli,        trigger: false}
        - get: stemcell
          resource: ubuntu-stemcell
          trigger: true
          params:
            preserve_filename: true

      - <<: *prepare-director
        file: pipelines/aws/tasks/prepare-director-iam.yml
        params:
          <<: *prepare-director-params
          AWS_STACK_NAME:   {{AWS_E2E_STACK_NAME}}

      - do:
          - <<: *deploy-director

          - <<: *run-e2e
            params:
              <<: *run-e2e-params
              STEMCELL_NAME:    *ubuntu-stemcell
              AWS_STACK_NAME:   {{AWS_E2E_STACK_NAME}}

        ensure:
          <<: *teardown
          params:
            <<: *teardown-params
            DEPLOYMENT_NAME: e2e-test

  - name: bats-centos
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release,   trigger: true}
        - {get: cpi-release,    trigger: true}
        - {get: after-midnight, trigger: true}
        - {get: pipelines,      trigger: false}
        - {get: bosh-cli,       trigger: false}
        - {get: bats,           trigger: false}
        - get: stemcell
          resource: centos-stemcell
          trigger: true
          params:
            preserve_filename: true

      - <<: *prepare-director
        params:
          <<: *prepare-director-params
          AWS_STACK_NAME: centos-manual-bats

      - do:
          - <<: *deploy-director

          - <<: *prepare-manual-bats
            params:
              <<: *prepare-manual-bats-params
              STEMCELL_NAME:  *centos-stemcell
              AWS_STACK_NAME: centos-manual-bats

          - <<: *run-bats

        ensure:
          <<: *teardown

  - name: bats-ubuntu
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release,   trigger: true}
        - {get: cpi-release,    trigger: true}
        - {get: after-midnight, trigger: true}
        - {get: pipelines,      trigger: false}
        - {get: bosh-cli,       trigger: false}
        - {get: bats,           trigger: false}
        - get: stemcell
          resource: ubuntu-stemcell
          trigger: true
          params:
            preserve_filename: true

      - <<: *prepare-director
        params:
          <<: *prepare-director-params
          AWS_STACK_NAME: ubuntu-manual-bats

      - do:
          - <<: *deploy-director

          - <<: *prepare-manual-bats
            params:
              <<: *prepare-manual-bats-params
              STEMCELL_NAME:  *ubuntu-stemcell
              AWS_STACK_NAME: ubuntu-manual-bats

          - <<: *run-bats
        ensure:
          <<: *teardown

  - name: test-upgrade
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release,     trigger: true}
        - {get: cpi-release,      trigger: true}
        - {get: after-midnight,   trigger: true}
        - {get: pipelines,        trigger: false}
        - {get: bosh-cli,         trigger: false}
        - {get: centos-stemcell,  trigger: false} # pass-through
        - {get: old-bosh-release, trigger: false, version: {version: "255.4"}, resource: bosh-release}
        - {get: old-cpi-release,  trigger: false, version: {version: "36"},  resource: cpi-release}
        - get: stemcell
          resource: ubuntu-stemcell
          trigger: true
          params:
            preserve_filename: true
        - get: old-stemcell
          resource: ubuntu-stemcell
          trigger: false
          version:
            version: "3232.15"
          params:
            preserve_filename: true

      - <<: *prepare-director
        input_mapping:
          stemcell:     old-stemcell
          bosh-release: old-bosh-release
          cpi-release:  old-cpi-release
        params:
          <<: *prepare-director-params
          AWS_STACK_NAME:    certify-upgrade
          USE_REDIS:         true

      - do:
        - <<: *deploy-director
          input_mapping:
            stemcell:     old-stemcell
            bosh-release: old-bosh-release
            cpi-release:  old-cpi-release

        - task: prepare-deployment
          file: pipelines/aws/tasks/prepare-deployment.yml
          params:
            BOSH_CLIENT:        {{BOSH_CLIENT}}
            BOSH_CLIENT_SECRET: {{BOSH_CLIENT_SECRET}}
            AWS_ACCESS_KEY:     {{AWS_ACCESS_KEY}}
            AWS_SECRET_KEY:     {{AWS_SECRET_KEY}}
            AWS_REGION_NAME:    {{AWS_REGION_NAME}}
            AWS_STACK_NAME:     certify-upgrade
            RELEASE_NAME:       certification
            DEPLOYMENT_NAME:    certification
            STEMCELL_NAME:      bosh-aws-xen-hvm-ubuntu-trusty-go_agent

        - task: create-deployment
          file: pipelines/aws/tasks/create-deployment.yml
          input_mapping:
            stemcell:           old-stemcell
          params:
            BOSH_CLIENT:        {{BOSH_CLIENT}}
            BOSH_CLIENT_SECRET: {{BOSH_CLIENT_SECRET}}
            AWS_ACCESS_KEY:     {{AWS_ACCESS_KEY}}
            AWS_SECRET_KEY:     {{AWS_SECRET_KEY}}
            AWS_REGION_NAME:    {{AWS_REGION_NAME}}
            AWS_STACK_NAME:     certify-upgrade
            RELEASE_NAME:       certification
            DEPLOYMENT_NAME:    certification

        - <<: *prepare-director
          params:
            <<: *prepare-director-params
            AWS_STACK_NAME:    certify-upgrade
            USE_REDIS:         false

        - task: test-upgrade
          file: pipelines/shared/tasks/test-upgrade.yml
          input_mapping:
            old-director-state:  director-state
            new-director-config: director-config
          output_mapping:
            new-director-state:  director-state
          params:
            DEPLOYMENT_NAME:     certification

        ensure:
          <<: *teardown

  - name: certify-centos
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release, trigger: true, passed: [bats-centos, end2end-us]}
        - {get: cpi-release,  trigger: true, passed: [bats-centos, end2end-us]}
        - {get: stemcell,     trigger: true, passed: [bats-centos, end2end-us, test-upgrade], resource: centos-stemcell}
        - {get: pipelines,    trigger: false}

      - task: generate
        file: pipelines/shared/tasks/generate-receipt.yml
        params:
          CPI_RELEASE_NAME: bosh-aws-cpi
          STEMCELL_NAME:    *centos-stemcell

      - {put: receipt, params: {file: certification/*-receipt.json}}

  - name: certify-ubuntu
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release, trigger: true, passed: [bats-ubuntu, end2end-us]}
        - {get: cpi-release,  trigger: true, passed: [bats-ubuntu, end2end-us]}
        - {get: stemcell,     trigger: true, passed: [bats-ubuntu, end2end-us, test-upgrade], resource: ubuntu-stemcell}
        - {get: pipelines,    trigger: false}

      - task: generate
        file: pipelines/shared/tasks/generate-receipt.yml
        params:
          CPI_RELEASE_NAME: bosh-aws-cpi
          STEMCELL_NAME:    *ubuntu-stemcell

      - {put: receipt, params: {file: certification/*-receipt.json}}

  - name: recreate-infrastructure-us
    serial: true
    plan:
      - {get: pipelines, trigger: false}
      - aggregate:
        - task: prepare-ubuntu-manual-bats-infrastructure
          file: pipelines/aws/tasks/recreate-infrastructure.yml
          params:
            AWS_STACK_NAME:     ubuntu-manual-bats
            AWS_ACCESS_KEY:     {{AWS_ACCESS_KEY}}
            AWS_SECRET_KEY:     {{AWS_SECRET_KEY}}
            AWS_REGION_NAME:    {{AWS_REGION_NAME}}
        - task: prepare-centos-manual-bats-infrastructure
          file: pipelines/aws/tasks/recreate-infrastructure.yml
          params:
            AWS_STACK_NAME:     centos-manual-bats
            AWS_ACCESS_KEY:     {{AWS_ACCESS_KEY}}
            AWS_SECRET_KEY:     {{AWS_SECRET_KEY}}
            AWS_REGION_NAME:    {{AWS_REGION_NAME}}
        - task: prepare-e2e-infrastructure
          file: pipelines/aws/tasks/recreate-infrastructure.yml
          params:
            AWS_STACK_NAME:     {{AWS_E2E_STACK_NAME}}
            AWS_ACCESS_KEY:     {{AWS_ACCESS_KEY}}
            AWS_SECRET_KEY:     {{AWS_SECRET_KEY}}
            AWS_REGION_NAME:    {{AWS_REGION_NAME}}
        - task: prepare-upgrade-infrastructure
          file: pipelines/aws/tasks/recreate-infrastructure.yml
          params:
            AWS_ACCESS_KEY:     {{AWS_ACCESS_KEY}}
            AWS_SECRET_KEY:     {{AWS_SECRET_KEY}}
            AWS_REGION_NAME:    {{AWS_REGION_NAME}}
            AWS_STACK_NAME:     certify-upgrade

resources:
  - name: after-midnight
    type: time
    source:
      start: 12:00 AM -0700
      stop: 2:00 AM -0700

  - name: pipelines
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/bosh-cpi-certification
      branch: master

  - name: cpi-release
    type: bosh-io-release
    source:
      repository: cloudfoundry-incubator/bosh-aws-cpi-release

  - name: bosh-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/bosh

  - name: bats
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
      branch: master

  - name: ubuntu-stemcell
    type: bosh-io-stemcell
    source:
      name: &ubuntu-stemcell bosh-aws-xen-hvm-ubuntu-trusty-go_agent

  - name: centos-stemcell
    type: bosh-io-stemcell
    source:
      name: &centos-stemcell bosh-aws-xen-hvm-centos-7-go_agent

  - name: bosh-cli
    type: s3
    source:
      regexp: bosh-cli-([0-9.]+)-linux-amd64
      cloudfront_url: https://dulfnruy35dwq.cloudfront.net
      bucket: bosh-cli-artifacts
      region_name: us-east-1

  - name: receipt
    type: s3
    source:
      access_key_id: {{certification__bucket_access_key}}
      secret_access_key: {{certification__bucket_secret_key}}
      bucket: {{certification__bucket}}
      regexp: .*-(\d+)-receipt\.json
      region_name: us-east-1
